# -*- coding: utf-8 -*-
"""Week 8 Practice Notebook: Updating Data on Redis - Breakout 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18sQRqJiqp-yA_186LzsB4ZdmSnZ2D95O

# Practice Notebook: Updating Data on Redis
"""

!pip install redis

"""## Challenge 1: Update a string value in Redis

Write a function that takes in two arguments: a Redis instance and a key. The function should update the value of the key in Redis to "world". Use the set() method to update the value.


Hints:

* Start by setting the value of the key to "hello" using the set() method.
* Then use the set() method again to update the value of the key to "world".
"""

# Your code goes below

# import redis
import redis

r = redis.Redis(host='redis-15919.c91.us-east-1-3.ec2.cloud.redislabs.com',
                port=15919,password='nVmHZlngfY9h61SwlkrcIsk8VF4ukWe4')

# Define the function
def update_string(redis_instance, key):
  #set the initial k,v
  r.set(key, "hello")
  #get
  old_value = r.get(key)

  #update
  r.set(key, "World!")
  #get
  new_value = r.get(key)

  #decode from byte object to string
  old_string = old_value.decode('utf-8')
  new_string = new_value.decode('utf-8')

  return(old_string, new_string)


# call the update_string() function
update_string(r, 'mykey')

"""### Sample Solution"""

import redis

def update_string(redis_instance, key):
  redis_instance.set(key, 'hello')
  redis_instance.set(key, 'world')

# redis_instance = redis.Redis(host="", port="", db="")
update_string(r, 'mykey')

"""## Challenge 2: Update a set value in Redis

Write a function that takes in two arguments: a Redis instance and a set name. The function should update the value "value1" in the set to "newvalue1". Use the srem() and sadd() methods to update the value.

Hints:

* Start by adding two values to the set using the sadd() method.
* Then remove the old value "value1" from the set using the srem() method.
* Finally, add the new value "newvalue1" to the set using the sadd() method.
"""

# Your code goes here

# import redis
import redis

# define the function
def update_set(redis_instance, set_name):
  # Add value1 to the set name
  redis_instance.sadd(set_name, 'value1')
  redis_instance.sadd(set_name, 'value2')
  redis_instance.sadd(set_name, 'value3')

  #remove the value using the srem 
  redis_instance.srem(set_name, 'value2')
  #add the new value
  redis_instance.sadd(set_name, 'newvalue2')

  #return new value
  set_members = redis_instance.smembers(set_name)
  set_string = set()
  for member in set_members:
    member_str= member.decode('utf-8')
    set_string.add(member_str)

  return(set_string)

# redis_instance = redis.Redis(host="", port="", db="")
update_set(r, 'myset')

"""### Sample solution"""

import redis

def update_set(redis_instance, set_name):
  redis_instance.sadd(set_name, 'value1')
  redis_instance.sadd(set_name, 'value2')
  redis_instance.srem(set_name, 'value1')
  redis_instance.sadd(set_name, 'newvalue1')

redis_instance = redis.Redis(host="", port="", db="")
update_set(redis_instance, 'myset')